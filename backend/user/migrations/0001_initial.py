# Generated by Django 3.2.12 on 2022-12-14 14:44

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import user.profile_models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('configuration', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('location', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(max_length=12, unique=True, verbose_name='mobile number')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=12)),
                ('code', models.CharField(max_length=255)),
                ('token', models.CharField(default='', max_length=255)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('activated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted_date', models.DateTimeField(blank=True, null=True)),
                ('owner', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='party_owner', to='user.party')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('description', models.TextField()),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_worksample', to='user.party')),
                ('skill', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='configuration.skill')),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField(blank=True, default=0, null=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vote_owner', to='user.party')),
                ('party', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='vote_party', to='user.party')),
            ],
        ),
        migrations.CreateModel(
            name='Specialty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('level', models.TextField()),
                ('description', models.TextField()),
                ('Institution_name', models.TextField()),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_speciality', to='user.party')),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('userid', models.TextField()),
                ('phone', models.TextField()),
                ('link', models.TextField()),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_socialmedia', to='user.party')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('talking', models.IntegerField(blank=True, default=0, null=True)),
                ('writing', models.IntegerField(blank=True, default=0, null=True)),
                ('comprehension', models.IntegerField(blank=True, default=0, null=True)),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuration.language')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_language', to='user.party')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('company', models.TextField()),
                ('description', models.TextField()),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_job', to='user.party')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_type', models.CharField(blank=True, choices=[('p', 'Phone'), ('m', 'Mobile'), ('a', 'Address')], default='a', max_length=1, null=True)),
                ('contact', models.TextField()),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_contact', to='user.party')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField()),
                ('Institution_name', models.TextField()),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_certificate', to='user.party')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('event', models.TextField()),
                ('description', models.TextField()),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_achievement', to='user.party')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuration.level')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_skill', to='user.party')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuration.skill')),
            ],
            options={
                'unique_together': {('party', 'skill')},
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('party', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='party_profile', serialize=False, to='user.party')),
                ('date_birth', models.DateField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to=user.profile_models.Profile.hash_upload)),
                ('age', models.IntegerField(blank=True, default=0, null=True)),
                ('about_me', models.TextField(blank=True, default='', null=True)),
                ('gender', models.CharField(blank=True, choices=[('f', 'Female'), ('m', 'Male')], default='m', max_length=1, null=True)),
                ('marital', models.CharField(blank=True, choices=[('y', 'Yes'), ('n', 'No')], default='m', max_length=1, null=True)),
                ('vote_total', models.IntegerField(blank=True, default=0, null=True)),
                ('panel', models.IntegerField(blank=True, default=0, null=True)),
                ('panel_timeout', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=False)),
                ('news', models.BooleanField(default=False)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='location.city')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='location.country')),
                ('state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='location.state')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uni_name', models.TextField()),
                ('description', models.TextField()),
                ('date_start', models.DateTimeField()),
                ('date_end', models.DateTimeField()),
                ('degree', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='configuration.degree')),
                ('party', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='party_education', to='user.party')),
            ],
            options={
                'unique_together': {('party', 'degree')},
            },
        ),
    ]
